{"version":3,"file":"index.min.js","sources":["source/event.js","source/element.js"],"sourcesContent":["const on = (node, adapter, [eventType, callback]) => {\r\n  const target = adapter.toNode(node);\r\n  target.addEventListener(eventType, callback);\r\n  return () => target.removeEventListener(eventType, callback);\r\n};\r\n\r\nconst off = (node, adapter, [eventType, callback]) => {\r\n  adapter\r\n    .toNode(node)\r\n    .removeEventListener(eventType, callback);\r\n};\r\n\r\nconst emmit = (node, adapter, [event]) => {\r\n  adapter\r\n    .toNode(node)\r\n    .dispatchEvent(event instanceof Event ? event : new Event(String(event)));\r\n};\r\n\r\nexport default {\r\n  on,\r\n  off,\r\n  emmit,\r\n};\r\n","const name = (node, adapter) => adapter.getName(node);\r\n\r\nconst text = (node, adapter) => adapter.toNode(node).innerText;\r\n\r\nconst attributes = (node, adapter) => adapter.toNode(node).attributes;\r\n\r\nconst attribute = (node, adapter, args) => {\r\n  const [name] = args;\r\n  const target = adapter.toNode(node);\r\n\r\n  if (args.length === 2) {\r\n    const [value] = args;\r\n\r\n    if (value === undefined) {\r\n      target.removeAttribute(name);\r\n    } else {\r\n      target.setAttribute(name, value);\r\n    }\r\n  }\r\n\r\n  return target.getAttribute(name);\r\n};\r\n\r\nconst parent = (node, adapter) => adapter.getParentNode(node);\r\n\r\nconst root = (node, adapter) => adapter.getRootNode(node);\r\n\r\nconst query = (node, adapter, [queryString], utils) => {\r\n  const result = adapter.toNode(node).querySelector(queryString);\r\n  return utils.wrap(adapter.isNode(result) ? result : [], adapter);\r\n};\r\n\r\nconst queryAll = (node, adapter, [queryString], utils) => {\r\n  const result = adapter.toNode(node).querySelectorAll(queryString);\r\n  return utils.wrap(result, adapter);\r\n};\r\n\r\nexport default {\r\n  name,\r\n  text,\r\n  attributes,\r\n  attribute,\r\n  parent,\r\n  root,\r\n  query,\r\n  queryAll,\r\n};\r\n"],"names":["node","adapter","eventType","callback","target","toNode","addEventListener","removeEventListener","event","dispatchEvent","Event","String","getName","innerText","attributes","args","name","length","value","undefined","removeAttribute","setAttribute","getAttribute","getParentNode","getRootNode","queryString","utils","result","querySelector","wrap","isNode","querySelectorAll"],"mappings":"oNAAW,CAACA,EAAMC,GAAUC,EAAWC,YAC/BC,EAASH,EAAQI,OAAOL,YACvBM,iBAAiBJ,EAAWC,GAC5B,IAAMC,EAAOG,oBAAoBL,EAAWC,QAGzC,CAACH,EAAMC,GAAUC,EAAWC,QAEnCE,OAAOL,GACPO,oBAAoBL,EAAWC,UAGtB,CAACH,EAAMC,GAAUO,QAE1BH,OAAOL,GACPS,cAAcD,aAAiBE,MAAQF,EAAQ,IAAIE,MAAMC,OAAOH,mBCfxD,CAACR,EAAMC,IAAYA,EAAQW,QAAQZ,QAEnC,CAACA,EAAMC,IAAYA,EAAQI,OAAOL,GAAMa,qBAElC,CAACb,EAAMC,IAAYA,EAAQI,OAAOL,GAAMc,qBAEzC,CAACd,EAAMC,EAASc,WACzBC,GAAQD,EACTX,EAASH,EAAQI,OAAOL,MAEV,IAAhBe,EAAKE,OAAc,OACdC,GAASH,OAEFI,IAAVD,IACKE,gBAAgBJ,KAEhBK,aAAaL,EAAME,UAIvBd,EAAOkB,aAAaN,WAGd,CAAChB,EAAMC,IAAYA,EAAQsB,cAAcvB,QAE3C,CAACA,EAAMC,IAAYA,EAAQuB,YAAYxB,SAEtC,CAACA,EAAMC,GAAUwB,GAAcC,WACrCC,EAAS1B,EAAQI,OAAOL,GAAM4B,cAAcH,UAC3CC,EAAMG,KAAK5B,EAAQ6B,OAAOH,GAAUA,KAAa1B,aAGzC,CAACD,EAAMC,GAAUwB,GAAcC,WACxCC,EAAS1B,EAAQI,OAAOL,GAAM+B,iBAAiBN,UAC9CC,EAAMG,KAAKF,EAAQ1B"}